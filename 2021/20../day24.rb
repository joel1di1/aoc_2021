# frozen_string_literal: true

require_relative '../../fwk'


@monad_input = '13579246899999'.chars.map(&:to_i)

def inp(a)
  @monad_input.shift
end
def mul(a, b)
  a * b
end
def add(a, b)
  a + b
end
def div(a,b)
  a / b
end
def mod(a,b)
  a % b
end
def eql(a,b)
  a == b ? 1 : 0
end

w = 0
x = 0
y = 0
z = 0
w = inp w
x = mul x,  0
x = add x,  z
x = mod x,  26
z = div z,  1
x = add x,  13
x = eql x,  w
x = eql x,  0
y = mul y,  0
y = add y,  25
y = mul y,  x
y = add y,  1
z = mul z,  y
y = mul y,  0
y = add y,  w
y = add y,  5
y = mul y,  x
z = add z,  y
w = inp w
x = mul x,  0
x = add x,  z
x = mod x,  26
z = div z,  1
x = add x,  15
x = eql x,  w
x = eql x,  0
y = mul y,  0
y = add y,  25
y = mul y,  x
y = add y,  1
z = mul z,  y
y = mul y,  0
y = add y,  w
y = add y,  14
y = mul y,  x
z = add z,  y
w = inp w
x = mul x,  0
x = add x,  z
x = mod x,  26
z = div z,  1
x = add x,  15
x = eql x,  w
x = eql x,  0
y = mul y,  0
y = add y,  25
y = mul y,  x
y = add y,  1
z = mul z,  y
y = mul y,  0
y = add y,  w
y = add y,  15
y = mul y,  x
z = add z,  y
w = inp w
x = mul x,  0
x = add x,  z
x = mod x,  26
z = div z,  1
x = add x,  11
x = eql x,  w
x = eql x,  0
y = mul y,  0
y = add y,  25
y = mul y,  x
y = add y,  1
z = mul z,  y
y = mul y,  0
y = add y,  w
y = add y,  16
y = mul y,  x
z = add z,  y
w = inp w
x = mul x,  0
x = add x,  z
x = mod x,  26
z = div z,  26
x = add x -16
x = eql x,  w
x = eql x,  0
y = mul y,  0
y = add y,  25
y = mul y,  x
y = add y,  1
z = mul z,  y
y = mul y,  0
y = add y,  w
y = add y,  8
y = mul y,  x
z = add z,  y
w = inp w
x = mul x,  0
x = add x,  z
x = mod x,  26
z = div z,  26
x = add x -11
x = eql x,  w
x = eql x,  0
y = mul y,  0
y = add y,  25
y = mul y,  x
y = add y,  1
z = mul z,  y
y = mul y,  0
y = add y,  w
y = add y,  9
y = mul y,  x
z = add z,  y
w = inp w
x = mul x,  0
x = add x,  z
x = mod x,  26
z = div z,  26
x = add x -6
x = eql x,  w
x = eql x,  0
y = mul y,  0
y = add y,  25
y = mul y,  x
y = add y,  1
z = mul z,  y
y = mul y,  0
y = add y,  w
y = add y,  2
y = mul y,  x
z = add z,  y
w = inp w
x = mul x,  0
x = add x,  z
x = mod x,  26
z = div z,  1
x = add x,  11
x = eql x,  w
x = eql x,  0
y = mul y,  0
y = add y,  25
y = mul y,  x
y = add y,  1
z = mul z,  y
y = mul y,  0
y = add y,  w
y = add y,  13
y = mul y,  x
z = add z,  y
w = inp w
x = mul x,  0
x = add x,  z
x = mod x,  26
z = div z,  1
x = add x,  10
x = eql x,  w
x = eql x,  0
y = mul y,  0
y = add y,  25
y = mul y,  x
y = add y,  1
z = mul z,  y
y = mul y,  0
y = add y,  w
y = add y,  16
y = mul y,  x
z = add z,  y
w = inp w
x = mul x,  0
x = add x,  z
x = mod x,  26
z = div z,  26
x = add x -10
x = eql x,  w
x = eql x,  0
y = mul y,  0
y = add y,  25
y = mul y,  x
y = add y,  1
z = mul z,  y
y = mul y,  0
y = add y,  w
y = add y,  6
y = mul y,  x
z = add z,  y
w = inp w
x = mul x,  0
x = add x,  z
x = mod x,  26
z = div z,  26
x = add x -8
x = eql x,  w
x = eql x,  0
y = mul y,  0
y = add y,  25
y = mul y,  x
y = add y,  1
z = mul z,  y
y = mul y,  0
y = add y,  w
y = add y,  6
y = mul y,  x
z = add z,  y
w = inp w
x = mul x,  0
x = add x,  z
x = mod x,  26
z = div z,  26
x = add x -11
x = eql x,  w
x = eql x,  0
y = mul y,  0
y = add y,  25
y = mul y,  x
y = add y,  1
z = mul z,  y
y = mul y,  0
y = add y,  w
y = add y,  9
y = mul y,  x
z = add z,  y
w = inp w
x = mul x,  0
x = add x,  z
x = mod x,  26
z = div z,  1
x = add x,  12
x = eql x,  w
x = eql x,  0
y = mul y,  0
y = add y,  25
y = mul y,  x
y = add y,  1
z = mul z,  y
y = mul y,  0
y = add y,  w
y = add y,  11
y = mul y,  x
z = add z,  y
w = inp w
x = mul x,  0
x = add x,  z
x = mod x,  26
z = div z,  26
x = add x -15
x = eql x,  w
x = eql x,  0
y = mul y,  0
y = add y,  25
y = mul y,  x
y = add y,  1
z = mul z,  y
y = mul y,  0
y = add y,  w
y = add y,  5
y = mul y,  x
z = add z,  y

puts "z = #{z}"